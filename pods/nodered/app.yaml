---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nodered-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: nodered
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nodered-container

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nodered
  labels:
    app: nodered

spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodered
  template:
    metadata:
      labels:
        app: nodered
    spec:
      serviceAccountName: nodered-container
      containers:
        - name: nodered
          securityContext:
            privileged: true
          imagePullPolicy: IfNotPresent
          image: nodered/node-red-dev:v2.0.0-beta.2
          ports:
            - name: web
              containerPort: 1880
          volumeMounts:
            - name: data     
              mountPath: /data
        - name: metrics
          imagePullPolicy: IfNotPresent
          image: quay.io/prometheus/node-exporter:latest
          ports:
            - name: metrics
              containerPort: 9100
      volumes:
        - name: data
          glusterfs:
            endpoints: glusterfs-cluster
            path: data/nodered/
            readOnly: false
      dnsPolicy: "ClusterFirst"

---
apiVersion: v1
kind: Service
metadata:
  name: nodered
spec:
  type: ClusterIP
  selector:
    app: nodered
  ports:
    - protocol: TCP
      port: 1880
      name: web
      targetPort: 1880
    - protocol: TCP
      port: 9100
      name: metrics
      targetPort: 9100

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodered-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  rules:
  - host: nodered.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nodered
            port:
              number: 1880
