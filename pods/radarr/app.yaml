---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: radarr-container
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: radarr
  labels:
    app: radarr

spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      serviceAccountName: radarr-container
      containers:
        - name: radarr
          imagePullPolicy: IfNotPresent
          image: ghcr.io/linuxserver/radarr
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: web
              containerPort: 7878
          volumeMounts:
            - name: media-downloads
              mountPath: /downloads
            - name: films
              mountPath: /films
            - name: config
              mountPath: /config
        - name: metrics
          imagePullPolicy: IfNotPresent
          image: quay.io/prometheus/node-exporter:latest
          ports:
            - name: metrics
              containerPort: 9100
      volumes:
        - name: config
          glusterfs:
            endpoints: glusterfs-cluster
            path: data/radarr
            readOnly: false
        - name: media-downloads
          flexVolume:
            driver: "fstab/cifs"
            fsType: "cifs"
            options:
              guest: "true"
              networkPath: "//192.168.100.250/Main/downloads"
              mountOptions: "rw,vers=3.0,guest,user=nobody,uid=1000,gid=1000,nolock"
            readOnly: false
        - name: films
          flexVolume:
            driver: "fstab/cifs"
            fsType: "cifs"
            options:
              guest: "true"
              networkPath: "//192.168.100.250/Main/Films"
              mountOptions: "rw,vers=3.0,guest,user=nobody,uid=1000,gid=1000,nolock"
            readOnly: false
      dnsPolicy: "ClusterFirst"

---
apiVersion: v1
kind: Service
metadata:
  name: radarr
spec:
  type: ClusterIP
  selector:
    app: radarr
  ports:
    - protocol: TCP
      port: 7878
      name: web
      targetPort: 7878
    - protocol: TCP
      port: 9100
      name: metrics
      targetPort: 9100

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  rules:
  - host: films.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: radarr
            port:
              number: 7878
